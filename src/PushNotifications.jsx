import { useState, useEffect } from "react";
import { sendPushNotification, subscribeToPushServer } from "./pushUtils";

const PushNotifications = () => {
  const [isSupported, setIsSupported] = useState(false);
  const [permission, setPermission] = useState("default");
  const [subscription, setSubscription] = useState(null);

  useEffect(() => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–¥–µ—Ä–∂–∫—É push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    if ("Notification" in window && "serviceWorker" in navigator) {
      setIsSupported(true);
      setPermission(Notification.permission);
    }
  }, []);

  const requestPermission = async () => {
    if (!isSupported) return;

    const result = await Notification.requestPermission();
    setPermission(result);
    return result;
  };

  const subscribeToPush = async () => {
    if (permission !== "granted") {
      const perm = await requestPermission();
      if (perm !== "granted") return;
    }

    try {
      const sub = await subscribeToPushServer();
      if (sub) {
        setSubscription(sub);
        console.log(
          "–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω–∞ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ:",
          sub
        );
      }
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏:", error);
    }
  };

  const sendTestNotification = async () => {
    if (permission === "granted") {
      await sendPushNotification(
        "–¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ",
        "–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç –≤–∞—à–µ–≥–æ PWA!",
        { tag: "test-notification" }
      );
    }
  };

  const sendScheduledNotification = () => {
    if (permission === "granted") {
      setTimeout(async () => {
        await sendPushNotification(
          "–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ",
          "–≠—Ç–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã!",
          { tag: "scheduled-notification" }
        );
      }, 3000);
    }
  };

  const simulateRealPush = async () => {
    if (permission === "granted" && subscription) {
      try {
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –Ω–∞—à –ª–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä
        const response = await fetch("http://localhost:3001/api/send-push-to", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({
            subscription: subscription,
            title: "–†–µ–∞–ª—å–Ω—ã–π Push –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞!",
            body: "–≠—Ç–æ push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å –≤–∞—à–µ–≥–æ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞! üöÄ",
            icon: "/pwa-192x192.png",
            url: "/",
          }),
        });

        if (response.ok) {
          const result = await response.json();
          console.log("Push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–µ—Ä:", result);
        } else {
          throw new Error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä");
        }
      } catch (error) {
        console.log("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä:", error);
        // Fallback –Ω–∞ –ª–æ–∫–∞–ª—å–Ω—É—é —Å–∏–º—É–ª—è—Ü–∏—é
        await sendPushNotification(
          "–°–∏–º—É–ª—è—Ü–∏—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ Push",
          "–≠—Ç–æ —Å–∏–º—É–ª—è—Ü–∏—è push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞!",
          { tag: "real-push-simulation" }
        );
      }
    }
  };

  if (!isSupported) {
    return (
      <div
        style={{
          padding: "20px",
          backgroundColor: "#f0f0f0",
          borderRadius: "8px",
          margin: "20px 0",
        }}
      >
        <h3>Push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è</h3>
        <p>–í–∞—à –±—Ä–∞—É–∑–µ—Ä –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.</p>
      </div>
    );
  }

  return (
    <div
      style={{
        padding: "20px",
        backgroundColor: "#f8f9fa",
        borderRadius: "8px",
        margin: "20px 0",
      }}
    >
      <h3>üîî Push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</h3>
      <p>
        –°—Ç–∞—Ç—É—Å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π: <strong>{permission}</strong>
      </p>

      <div
        style={{
          display: "flex",
          gap: "10px",
          flexWrap: "wrap",
          marginTop: "15px",
        }}
      >
        {permission === "default" && (
          <button
            onClick={requestPermission}
            style={{
              backgroundColor: "#646cff",
              color: "white",
              border: "none",
              padding: "10px 20px",
              borderRadius: "5px",
              cursor: "pointer",
            }}
          >
            –ó–∞–ø—Ä–æ—Å–∏—Ç—å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ
          </button>
        )}

        {permission === "granted" && !subscription && (
          <button
            onClick={subscribeToPush}
            style={{
              backgroundColor: "#28a745",
              color: "white",
              border: "none",
              padding: "10px 20px",
              borderRadius: "5px",
              cursor: "pointer",
            }}
          >
            –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ push
          </button>
        )}

        {permission === "granted" && (
          <>
            <button
              onClick={sendTestNotification}
              style={{
                backgroundColor: "#17a2b8",
                color: "white",
                border: "none",
                padding: "10px 20px",
                borderRadius: "5px",
                cursor: "pointer",
              }}
            >
              –¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            </button>

            <button
              onClick={sendScheduledNotification}
              style={{
                backgroundColor: "#ffc107",
                color: "black",
                border: "none",
                padding: "10px 20px",
                borderRadius: "5px",
                cursor: "pointer",
              }}
            >
              –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 3 —Å–µ–∫
            </button>

            <button
              onClick={() =>
                sendPushNotification(
                  "SW Push",
                  "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ Service Worker!"
                )
              }
              style={{
                backgroundColor: "#6f42c1",
                color: "white",
                border: "none",
                padding: "10px 20px",
                borderRadius: "5px",
                cursor: "pointer",
              }}
            >
              SW Push
            </button>

            <button
              onClick={simulateRealPush}
              style={{
                backgroundColor: "#dc3545",
                color: "white",
                border: "none",
                padding: "10px 20px",
                borderRadius: "5px",
                cursor: "pointer",
              }}
            >
              –°–∏–º—É–ª—è—Ü–∏—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ Push
            </button>
          </>
        )}
      </div>

      {subscription && (
        <div
          style={{
            marginTop: "15px",
            padding: "10px",
            backgroundColor: "#d4edda",
            borderRadius: "5px",
          }}
        >
          <p>
            <strong>‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞!</strong>
          </p>
          <p style={{ fontSize: "12px", wordBreak: "break-all" }}>
            Endpoint: {subscription.endpoint.substring(0, 50)}...
          </p>
        </div>
      )}

      <div
        style={{
          marginTop: "15px",
          padding: "10px",
          backgroundColor: "#e7f3ff",
          borderRadius: "5px",
          fontSize: "14px",
        }}
      >
        <p>
          <strong>üß™ –ö–∞–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:</strong>
        </p>
        <ol style={{ margin: "5px 0", paddingLeft: "20px" }}>
          <li>
            –ó–∞–ø—É—Å—Ç–∏—Ç–µ push-—Å–µ—Ä–≤–µ—Ä: <code>cd push-server && npm start</code>
          </li>
          <li>–ù–∞–∂–º–∏—Ç–µ "–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ push"</li>
          <li>
            –û—Ç–∫—Ä–æ–π—Ç–µ{" "}
            <a
              href="http://localhost:3001"
              target="_blank"
              style={{ color: "#646cff" }}
            >
              http://localhost:3001
            </a>{" "}
            –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ push
          </li>
          <li>–ò–ª–∏ –Ω–∞–∂–º–∏—Ç–µ "–°–∏–º—É–ª—è—Ü–∏—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ Push"</li>
          <li>–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ—è–≤–∏—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ!</li>
        </ol>
        <p style={{ fontSize: "12px", color: "#666", marginTop: "10px" }}>
          üí° <strong>–í–∞–∂–Ω–æ:</strong> Service Worker —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —Ñ–æ–Ω–µ –∏ –º–æ–∂–µ—Ç
          –ø–æ–ª—É—á–∞—Ç—å push-—Å–æ–±—ã—Ç–∏—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ PWA –∑–∞–∫—Ä—ã—Ç–æ!
        </p>
      </div>
    </div>
  );
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ VAPID –∫–ª—é—á–∞
function urlBase64ToUint8Array(base64String) {
  const padding = "=".repeat((4 - (base64String.length % 4)) % 4);
  const base64 = (base64String + padding).replace(/-/g, "+").replace(/_/g, "/");
  const rawData = window.atob(base64);
  const outputArray = new Uint8Array(rawData.length);
  for (let i = 0; i < rawData.length; ++i) {
    outputArray[i] = rawData.charCodeAt(i);
  }
  return outputArray;
}

export default PushNotifications;
